//-
  Package layout
  
  This layout is used when rendering a package.  The rendered page contains the
  package's metadata and README.
  
  The HTML produced by this layout conform to the [hProduct](http://microformats.org/wiki/hproduct)
  microformat.
  
  The contents of the README are selectable using a `.description` class selector.
  
  The author of the package is selectable using a `.author` class selector, and
  the contents of that element conform to [hCard](http://microformats.org/wiki/hcard).
  Note that `.author` is not formally specified as part of the hProduct
  microformat, but its use here was borrowed from [hAtom](http://microformats.org/wiki/hatom).
  
  Additional software-related metadata conform to the [downloads](http://microformats.org/wiki/downloads)
  microformat, which, while still exploratory, is comprehensive and usable.  The
  latest version information is selectable using `.version` and `.updated` class
  selectors.
  
  License information is indicating using [rel=license](http://microformats.org/wiki/rel-license).
  Note that the license information in this situation is indicating the license
  of the _package_ only, and not the page itself.  This ambiguity is a known
  [issue](http://microformats.org/wiki/rel-license-issues), but its impact is
  not considered severe enough to warrant an alternative.
//-

block content
  #package.package.hproduct
    .description
      |!{ readme }
    .metadata
      div.install
        code npm install#{' '}
          span.fn #{name}
      
      ul
        if author
          li.vcard.author
            a(class='url', href=author.url)
              img(class='photo', src=author.photo)
              span.nickname #{author.username}
        li
          span.version #{version}
          | #{' '}published#{' '}
          abbr(class='updated', title=modifiedAt.toISOString().substring(0,19)+'Z') #{modifiedTimeAgo}
        if repository
          li
            a(class='url', href=repository.url) #{homepage}
        li
          a(rel='licence', href=license.url) #{license.name}

      ul
        li
          b #{downloads['last-day'].toLocaleString()}
          | #{' '}downloads in the last day
        li
          b #{downloads['last-week'].toLocaleString()}
          | #{' '}downloads in the last week
        li
          b #{downloads['last-month'].toLocaleString()}
          | #{' '}downloads in the last month
